#-------------------------------------------------------------------------------
# Workflow configuration
#-------------------------------------------------------------------------------

name: Deploy

on:
  push:               # Run on push
    paths-ignore:     # File patterns to ignore
    - '**.md'         # Ignore changes to *.md files
    tags:
    - 'v*'            # Run on tags starting with 'v'

  pull_request:       # Run on pull-request
    paths-ignore:     # File-patterns to ignore
    - '**.md'         # Ignore changes to *.md files

#-------------------------------------------------------------------------------
# Define application name & version
#-------------------------------------------------------------------------------

env:
  VERSION: "1.0.0"
  QT_VERSION_LINUX: 6.8.1
  QT_VERSION_MACOS: 6.8.1
  QT_VERSION_WINDOWS: 6.8.1
  EXECUTABLE: "BG-Serial-Studio"
  APPLICATION: "BG Serial Studio"
  UNIXNAME: "bg-serial-studio"
  QML_DIR: "../../app/qml"
  PUBLISHER: "yeclimeric"
  DESCRIPTION: "Multi-purpose serial data visualization & processing program"
  QT_MODULES: qt3d qtgraphs qtquick3d qtlocation qtdatavis3d qtserialport qtshadertools qtpositioning qtconnectivity
    
#-------------------------------------------------------------------------------
# Workflow jobs (GNU/Linux, macOS & Windows)
#-------------------------------------------------------------------------------

jobs:
  #
  # Windows build
  #
  build-windows-x86_64:
    runs-on: windows-latest
    name: 'üßä Windows (x86_64)'
    steps:
    - run: git config --global core.autocrlf input
    - name: 'üß∞ Checkout'
      uses: actions/checkout@v4

    - name: '‚öôÔ∏è Install Qt'
      uses: jurplel/install-qt-action@v4
      with:
        version: ${{env.QT_VERSION_WINDOWS}}
        modules: ${{env.QT_MODULES}}
        cache: 'true'
        arch: win64_msvc2022_64
      
    - name: '‚öôÔ∏è Install CMake'
      uses: lukka/get-cmake@latest
      with:
        useLocalCache: true

    - name: 'üõ† Setup MSVC Development Environment'
      uses: TheMrMilchmann/setup-msvc-dev@v3
      with:
        arch: x64
        
    - name: 'üöß Configure with CMake'
      run: |
        mkdir build
        cd build
        cmake ../ -DCMAKE_CXX_COMPILER=cl -DCMAKE_C_COMPILER=cl -DPRODUCTION_OPTIMIZATION=ON -DCMAKE_BUILD_TYPE=Release

    - name: 'üöß Build application'
      run: |
        cd build
        cmake --build . --config Release -j 16
        
    - name: '‚öôÔ∏è Add msbuild to PATH'
      uses: microsoft/setup-msbuild@v2
      
    - name: '‚öôÔ∏è Install WiX'
      run: dotnet tool install --global wix
        
    - name: 'üì¶ Package application'
      run: |
        cd build
        cpack --verbose
        mv *.msi ${{env.EXECUTABLE}}-${{env.VERSION}}-Windows-x86_64.msi
        mv ${{env.EXECUTABLE}}-${{env.VERSION}}-Windows-x86_64.msi ../
        
    - name: 'üì§ Upload artifact: MSI installer'
      uses: actions/upload-artifact@v4
      with:
        name: ${{env.EXECUTABLE}}-${{env.VERSION}}-Windows-x86_64.msi
        path: ${{env.EXECUTABLE}}-${{env.VERSION}}-Windows-x86_64.msi

  # Upload continuous build
  upload:
      name: 'üóÇ Create release and upload artifacts'
      needs:
        - build-windows-x86_64
      runs-on: ubuntu-latest
      steps:
      - name: 'üì• Download artifacts'
        uses: actions/download-artifact@v4
      - name: 'üóÇ Inspect directory after downloading artifacts'
        run: ls -alFR
      - name: 'üöÄ Create release and upload artifacts'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            sudo apt-get update
            sudo apt-get install libfuse2
            wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
            chmod +x pyuploadtool-x86_64.AppImage

            ./pyuploadtool-x86_64.AppImage **/${{env.EXECUTABLE}}-${{env.VERSION}}-Windows-x86_64.msi
